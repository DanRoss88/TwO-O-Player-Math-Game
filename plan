This project will contain multiple classes. Each class should be defined in its own rb file. You should not put any other code outside the class definition
Define a main.rb file that will require all the other files
Use gets.chomp to get input from users and puts for output
Isolate your I/O logic to one or two classes. Don't allow all your classes to interact (gets/puts) with the User
Remember to build incrementally, writing small amounts of runnable code instead of writing out a whole bunch of classes/methods that are not yet testable/runnable.
Use puts, raise some_val.inspect, and byebug to help with debugging

example output: 

Player 1: What does 5 plus 3 equal?
//>9
Player 1: Seriously? No!
P1: 2/3 vs P2: 3/3
New Turn
some time later
Player 1 wins with a score of 1/3
Game over
goodbye

Nouns
Game Loop Main.rb
// Player enters name 1 of 2
// decides which player based on turn
// turn current_player
// question_# === answer_#
// if correct, change state
// if incorrect, change state
// tally score for current_player
// declares state, turn, output marks end of loop

##Turn
// will change state based on player turn 2 turns
// current_player

##Player 
one of two
// Will change state with input
// player declare name U/I

##Question
// will be the driving part of the game, alter state whether true or false 

Answer
// user interface form
// 
// designated True for question

Correct
// matches answer, changes state
Incorrect
// does not match answer, changes state
##Score
// Score based on correct, incorrect, player
output
// declares state and returns to beginning

End, after turns run out, winner is declared based on score and game ends
